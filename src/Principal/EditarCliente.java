/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import conexion.ConnectionTableDB;
import java.math.BigDecimal;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Advantech Digital
 */
public class EditarCliente extends javax.swing.JFrame {
    public String usu = "", contra = "", ip;
    private boolean credito;
    private double cupoC;
    ConnectionTableDB model;
    public String nombre, ruc, codigo, idc;
    public String nsurtidor;

    /**
     * Creates new form EditarCliente
     */
    public EditarCliente(String user, String password) {
        usu = user;
        contra = password;
        String consulta = "SELECT idcliente AS ID, nombre AS NOMBRE, "
                        + "cedula_ruc AS 'CEDULA/RUC', codigo AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM cliente, codigos WHERE idcliente = 0";
        try {
            model = new ConnectionTableDB(usu, contra, "adv_facturacion", consulta, false);
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
        initComponents();
        setSize(1200, 600);
        setResizable(false);
        rcliente.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        group = new javax.swing.ButtonGroup();
        nusuario = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ncliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        rcliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ccliente = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        dirCliente = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        telfCliente = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cocliente = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        btnPrepago = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        rbtnPrepago = new javax.swing.JRadioButton();
        rbtnCredito = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla1 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        btnEditar = new javax.swing.JButton();
        btnLimipiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar Cliente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        nusuario.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(nusuario, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.GridLayout(2, 1, 20, 20));

        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(6, 2, 5, 5));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Nombre:");
        jPanel4.add(jLabel1);

        ncliente.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        ncliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nclienteActionPerformed(evt);
            }
        });
        ncliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nclienteKeyTyped(evt);
            }
        });
        jPanel4.add(ncliente);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("RUC/CEDULA:");
        jPanel4.add(jLabel2);

        rcliente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rclienteActionPerformed(evt);
            }
        });
        rcliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rclienteKeyTyped(evt);
            }
        });
        jPanel4.add(rcliente);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("CODIGO:");
        jPanel4.add(jLabel6);

        ccliente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ccliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cclienteActionPerformed(evt);
            }
        });
        ccliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cclienteKeyTyped(evt);
            }
        });
        jPanel4.add(ccliente);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Dirección");
        jPanel4.add(jLabel15);

        dirCliente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        dirCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dirClienteActionPerformed(evt);
            }
        });
        jPanel4.add(dirCliente);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Teléfono:");
        jPanel4.add(jLabel14);

        telfCliente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        telfCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telfClienteActionPerformed(evt);
            }
        });
        jPanel4.add(telfCliente);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setText("Email:");
        jPanel4.add(jLabel13);

        cocliente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cocliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coclienteActionPerformed(evt);
            }
        });
        jPanel4.add(cocliente);

        jPanel5.add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(400, 200));

        btnPrepago.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPrepago.setText("AUTORIZAR");
        btnPrepago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrepagoActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.setEnabled(false);
        btnCancelar.setVisible(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        rbtnPrepago.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtnPrepago.setSelected(true);
        rbtnPrepago.setText("PREPAGO");

        rbtnCredito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbtnCredito.setText("CREDITO");
        group.add(rbtnPrepago);
        group.add(rbtnCredito);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnCredito)
                    .addComponent(rbtnPrepago)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnPrepago, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(rbtnPrepago)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbtnCredito)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrepago, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jPanel5.add(jPanel6, java.awt.BorderLayout.EAST);

        jPanel2.add(jPanel5);

        tabla1.setBackground(new java.awt.Color(240, 240, 240));
        tabla1.setModel(model);
        tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla1);

        jPanel2.add(jScrollPane2);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnEditar.setText("Editar Cliente");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel7.add(btnEditar);

        btnLimipiar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLimipiar.setText("Cancelar / Limpiar");
        btnLimipiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimipiarActionPerformed(evt);
            }
        });
        jPanel7.add(btnLimipiar);

        getContentPane().add(jPanel7, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla1MouseClicked
        try {
            ncliente.setText((String)model.getValueAt(tabla1.getSelectedRow(), 1));
            rcliente.setText((String)model.getValueAt(tabla1.getSelectedRow(), 2));
            ccliente.setText((String)model.getValueAt(tabla1.getSelectedRow(), 3));
            cocliente.setText((String)model.getValueAt(tabla1.getSelectedRow(), 4));
            credito = (Boolean)model.getValueAt(tabla1.getSelectedRow(), 5);
            cupoC = ((BigDecimal)model.getValueAt(tabla1.getSelectedRow(), 6)).doubleValue();
            model.consulta("SELECT direccion, telefono FROM adv_facturacion.cliente  WHERE  cedula_ruc like ('" + rcliente.getText() + "%')");
            dirCliente.setText((String)model.getValueAt(0, 0));
            telfCliente.setText((String)model.getValueAt(0, 1));
            
            model.consulta("SELECT DISTINCT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC',"
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE cedula_ruc LIKE ('" + rcliente.getText() + "%')");
            if (rcliente.getText().length() == 13) {
                ncliente.setEditable(false);
            } else {
                ncliente.setEditable(true);
                ncliente.requestFocus();
                ncliente.selectAll();
            }
            if (ncliente.getText().length() != 0 
                || ccliente.getText().length() != 0) {
                btnPrepago.setEnabled(true);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_tabla1MouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (rcliente.getText().length() != 0 && !rcliente.isEditable()) {
            try {
                int id = (Integer)tabla1.getValueAt(0, 0);
                if (ccliente.getText().length() != 0) {
                    model.consulta("SELECT * FROM codigos WHERE codigo = '" + ccliente.getText() + "'");
                    if (model.getRowCount() < 1) {
                        model.ejecutar("INSERT INTO codigos (codigo, tipo_codigo, cliente_idcliente) "
                                + "VALUES ("
                                + "'" + ccliente.getText() + "', "
                                + "'codigo', "
                                + id + ")");
                    } else {
                        model.ejecutar("UPDATE codigos SET "
                                + "codigo = '" + ccliente.getText() + "' "
                                + "WHERE cliente_idcliente = " + id );
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No fue posible actualizar el código.\n"
                            + "Cliente con el código " + ccliente.getText() + " ya existe.");
                }
                model.ejecutar("UPDATE cliente SET "
                            + "nombre = '" + ncliente.getText() + "', "
                            + "direccion = '" + dirCliente.getText() + "', "
                            + "telefono = '" + telfCliente.getText() + "', "
                            + "email = '" + cocliente.getText() + "' "
                            + "WHERE cedula_ruc = '" + rcliente.getText() + "'");
                
                model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, "
                            + "cedula_ruc AS 'CEDULA/RUC', codigo AS CODIGO, "
                            + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                            + "cupo_cliente AS CUPO "
                            + "FROM cliente, codigos "
                            + "WHERE idcliente = 0");
            } catch (SQLException ex) {
                System.err.println(ex.getMessage());
            }
            JOptionPane.showMessageDialog(this, "Cliente modificado correctamente.");
        } else
            JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
        ncliente.setText("");
        rcliente.setText("");
        ccliente.setText("");
        dirCliente.setText("");
        telfCliente.setText("");
        cocliente.setText("");
        rcliente.setEditable(true);
        rcliente.requestFocus();
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void nclienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nclienteKeyTyped

        char c = evt.getKeyChar();

        if (!Character.isLetter(c) && !Character.isSpaceChar(c)) {
            //getToolkit().beep();

            evt.consume();

        } else {

            nombre = ncliente.getText().toUpperCase();
            try {
                model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC',"
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO, "
                        + "MATCH(nombre) AGAINST('%" + nombre + "%') AS Coincidencia "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE MATCH(nombre) AGAINST('%" + nombre + "%') "
                        + "GROUP BY nombre "
                        + "ORDER BY Coincidencia DESC LIMIT 100");
            } catch (SQLException ex) {
                System.out.println("Error sql:\n" + ex.getMessage());
            } catch (java.lang.NullPointerException ex) {
                System.out.println("Cliente no encontrado:\n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_nclienteKeyTyped

    private void rclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rclienteActionPerformed
        try {
            ncliente.setText((String)model.getValueAt(0, 1));
            rcliente.setText((String)model.getValueAt(0, 2));
            ccliente.setText((String)model.getValueAt(0, 3));
            cocliente.setText((String)model.getValueAt(0, 4));
            credito = (Boolean)model.getValueAt(0, 5);
            cupoC = ((BigDecimal)model.getValueAt(0, 6)).doubleValue();
            model.consulta("SELECT direccion, telefono FROM adv_facturacion.cliente  WHERE  cedula_ruc LIKE ('" + rcliente.getText() + "%')");
            dirCliente.setText((String)model.getValueAt(0, 0));
            telfCliente.setText((String)model.getValueAt(0, 1));
            
            model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC', "
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE cedula_ruc LIKE ('" + rcliente.getText() + "%')");
            if (rcliente.getText().length() == 13) {
                ncliente.setEditable(false);
                ccliente.requestFocus();
                ccliente.selectAll();
                    
            } else {
                ncliente.setEditable(true);
                ncliente.requestFocus();
                ncliente.selectAll();
            }
            if (ncliente.getText().length() != 0 
                || ccliente.getText().length() != 0) {
                btnPrepago.setEnabled(true);
             }
        } catch (java.lang.ArrayIndexOutOfBoundsException | SQLException ex) {
            System.err.println(ex.getMessage());
        }
        
        rcliente.setEditable(false);
        btnEditar.setEnabled(true);
        if (credito) {
            btnCancelar.setVisible(true);
            btnCancelar.setEnabled(true);
        }

        btnPrepago.setEnabled(true);
        
        
        
    }//GEN-LAST:event_rclienteActionPerformed

    private void rclienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rclienteKeyTyped

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            //getToolkit().beep();

            evt.consume();

        }
        
        if (rcliente.getText().length() > 4)
        try {

            model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC',"
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE cedula_ruc "
                        + "LIKE ('" + rcliente.getText() + "%') "
                        + "GROUP BY nombre LIMIT 100");
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        } catch (java.lang.NullPointerException ex) {
            System.err.println("Cliente no encontrado\n" + ex.getMessage());
        }
    }//GEN-LAST:event_rclienteKeyTyped

    private void cclienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cclienteKeyTyped
        char c = evt.getKeyChar();

        if (c < '0' || c > '9') {
            //getToolkit().beep();

            evt.consume();

        }

        if (ncliente.getText().length() == 0) {
            codigo = ccliente.getText();
            try {
                model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC',"
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE codigo LIKE ('" + ccliente.getText() + "%') "
                        + "AND idcliente = cliente_idcliente LIMIT 100");
            } catch (SQLException ex) {
                System.err.println(ex.getMessage());
            } catch (java.lang.NullPointerException ex) {
                System.out.println("Cliente no encontrado\n" + ex.getMessage());
            }
        }
    }//GEN-LAST:event_cclienteKeyTyped

    private void cclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cclienteActionPerformed
        // TODO add your handling code here:
        if (ncliente.getText().length() != 0)
            dirCliente.requestFocus();
        else {
            try {
                ncliente.setText((String)model.getValueAt(0, 1));
                rcliente.setText((String)model.getValueAt(0, 2));
                ccliente.setText((String)model.getValueAt(0, 3));
                cocliente.setText((String)model.getValueAt(0, 4));
                credito = (Boolean)model.getValueAt(0, 5);
                cupoC = ((BigDecimal)model.getValueAt(0, 6)).doubleValue();
                model.consulta("SELECT direccion, telefono FROM adv_facturacion.cliente, codigos WHERE codigo LIKE ('" + ccliente.getText() + "%') AND idcliente = cliente_idcliente");
                dirCliente.setText((String)model.getValueAt(0, 0));
                telfCliente.setText((String)model.getValueAt(0, 1));
            
                model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC',"
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE cedula_ruc LIKE ('" + rcliente.getText() + "%') "
                        + "AND codigo LIKE '%" + ccliente.getText() + "'");
                if (rcliente.getText().length() == 13) {
                    ncliente.setEditable(false);
                    ccliente.requestFocus();
                    ccliente.selectAll();
                } else {
                    ncliente.setEditable(true);
                    ncliente.requestFocus();
                    ncliente.selectAll();
                }
                if (ncliente.getText().length() != 0 
                    || ccliente.getText().length() != 0) {
                    btnPrepago.setEnabled(true);
                 }
            } catch (java.lang.ArrayIndexOutOfBoundsException | SQLException ex) {
                System.err.println(ex.getMessage());
            }
        }
        rcliente.setEditable(false);
        btnEditar.setEnabled(true);
        if (credito) {
            btnCancelar.setVisible(true);
            btnCancelar.setEnabled(true);
        }
    }//GEN-LAST:event_cclienteActionPerformed

    private void dirClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dirClienteActionPerformed
        // TODO add your handling code here:
        if (ncliente.getText().length() != 0)
            telfCliente.requestFocus();
    }//GEN-LAST:event_dirClienteActionPerformed

    private void telfClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telfClienteActionPerformed
        // TODO add your handling code here:
        if (ncliente.getText().length() != 0)
            cocliente.requestFocus();
    }//GEN-LAST:event_telfClienteActionPerformed

    private void coclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coclienteActionPerformed
        // TODO add your handling code here:
        if (ncliente.getText().length() != 0)
            btnEditar.requestFocusInWindow();
    }//GEN-LAST:event_coclienteActionPerformed

    private void nclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nclienteActionPerformed
        // TODO add your handling code here:
        if (rcliente.getText().length() != 0) {
            ccliente.requestFocus();
        }
        else {
            try {
                ncliente.setText((String)model.getValueAt(0, 1));
                rcliente.setText((String)model.getValueAt(0, 2));
                ccliente.setText((String)model.getValueAt(0, 3));
                cocliente.setText((String)model.getValueAt(0, 4));
                credito = (Boolean)model.getValueAt(0, 5);
                cupoC = ((BigDecimal)model.getValueAt(0, 6)).doubleValue();
                model.consulta("SELECT direccion, telefono FROM adv_facturacion.cliente  WHERE  cedula_ruc = '" + rcliente.getText() + "'");
                dirCliente.setText((String)model.getValueAt(0, 0));
                telfCliente.setText((String)model.getValueAt(0, 1));
            
                model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, cedula_ruc AS 'CEDULA/RUC',"
                        + "(SELECT codigo FROM codigos WHERE idcliente = cliente_idcliente) AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM adv_facturacion.cliente, codigos "
                        + "WHERE cedula_ruc LIKE ('" + rcliente.getText() + "%')");
                if (rcliente.getText().length() == 13) {
                    ncliente.setEditable(false);
                    ccliente.requestFocus();
                    ccliente.selectAll();
                } else {
                    ncliente.setEditable(true);
                    ncliente.requestFocus();
                    ncliente.selectAll();
                }
                if (ncliente.getText().length() != 0 
                    || ccliente.getText().length() != 0) {
                    btnPrepago.setEnabled(true);
                }
                if (credito) {
                    btnCancelar.setVisible(true);
                    btnCancelar.setEnabled(true);
                }
            } catch (java.lang.ArrayIndexOutOfBoundsException | SQLException ex) {
                System.err.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_nclienteActionPerformed

    private void btnPrepagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrepagoActionPerformed
        // TODO add your handling code here:
        String pago;
        if (rbtnPrepago.isSelected()) pago = "PREPAGO";
        else /*if (rbtnCredito.isSelected())*/ pago = "CREDITO";
        setEnabled(false);
        Autorizar prepago = new Autorizar(credito, ncliente.getText(), rcliente.getText(), ccliente.getText(), 
                dirCliente.getText(), (credito ? pago : "EFECTIVO"), pago,
                String.format("%.2f", cupoC), model, rcliente);
        prepago.setVisible(true);
        prepago.checkCancel();
        //while (!prepago.isClosed()){}
        setEnabled(true);
        
        ncliente.setText("");
        rcliente.setText("");
        ccliente.setText("");
        dirCliente.setText("");
        telfCliente.setText("");
        cocliente.setText("");
        rcliente.setEditable(true);
        //rcliente.requestFocus();
    }//GEN-LAST:event_btnPrepagoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        String pago;
        if (rbtnPrepago.isSelected()) pago = "PREPAGO";
        else pago = "CREDITO";
        int op = JOptionPane.showConfirmDialog(this, "Realmente desea cancelar el cliente de " + pago +"?", 
                "CANCELAR " + pago, 
                JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            try {
                model.ejecutar("UPDATE cliente "
                            + "SET credito_cliente = 0, "
                            + "estado = 'No Autorizado', "
                            + "cupo_cliente = 0 "
                            + "WHERE cedula_ruc = '" + rcliente.getText() + "'");
                model.consulta("SELECT idcliente "
                        + "FROM cliente "
                        + "WHERE cedula_ruc = '" + rcliente.getText() + "'");
                int idCliente = (Integer)model.getValueAt(0, 0);
                model.ejecutar("DELETE FROM credito_cliente "
                        + "WHERE cliente_idcliente = " + idCliente);
                model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, "
                        + "cedula_ruc AS 'CEDULA/RUC', codigo AS CODIGO, "
                        + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                        + "cupo_cliente AS CUPO "
                        + "FROM cliente, codigos WHERE idcliente = 0");
                JOptionPane.showMessageDialog(getContentPane(), 
                            "Cliente " + pago + " cancelado correctamente!", 
                            "CANCELAR " + pago,
                            JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                System.err.println(ex.getMessage());
            }
            
            btnCancelar.setVisible(false);
            btnCancelar.setEnabled(false);
            ncliente.setText("");
            rcliente.setText("");
            ccliente.setText("");
            dirCliente.setText("");
            telfCliente.setText("");
            cocliente.setText("");
            rcliente.setEditable(true);
            rcliente.requestFocus();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if (model.connected) {
            model.desconectar();
        }
    }//GEN-LAST:event_formWindowClosed

    private void btnLimipiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimipiarActionPerformed
        // TODO add your handling code here:
        ncliente.setText("");
        rcliente.setText("");
        ccliente.setText("");
        dirCliente.setText("");
        telfCliente.setText("");
        cocliente.setText("");
        rcliente.setEditable(true);
        rcliente.requestFocus();
        btnEditar.setEnabled(false);
        try {
            model.consulta("SELECT idcliente AS ID, nombre AS NOMBRE, "
                            + "cedula_ruc AS 'CEDULA/RUC', codigo AS CODIGO, "
                            + "email AS CORREO, credito_cliente AS 'CREDITO?', "
                            + "cupo_cliente AS CUPO "
                            + "FROM cliente, codigos WHERE idcliente = 0");
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnLimipiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                //new EditarCliente().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnLimipiar;
    private javax.swing.JButton btnPrepago;
    private javax.swing.JTextField ccliente;
    private javax.swing.JTextField cocliente;
    private javax.swing.JTextField dirCliente;
    private javax.swing.ButtonGroup group;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField ncliente;
    private javax.swing.JLabel nusuario;
    private javax.swing.JRadioButton rbtnCredito;
    private javax.swing.JRadioButton rbtnPrepago;
    private javax.swing.JTextField rcliente;
    private javax.swing.JTable tabla1;
    private javax.swing.JTextField telfCliente;
    // End of variables declaration//GEN-END:variables
}
